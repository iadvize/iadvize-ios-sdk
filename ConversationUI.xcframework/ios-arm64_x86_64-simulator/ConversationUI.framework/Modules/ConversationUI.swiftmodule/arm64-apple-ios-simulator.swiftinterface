// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target arm64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ConversationUI
import Alamofire
import AlamofireImage
@_exported import ConversationUI
import Foundation
import LinkPresentation
import MobileCoreServices
import Swift
import UIKit
public protocol Sender {
  var senderId: Swift.String { get }
  var displayName: Swift.String { get }
  var avatar: ConversationUI.Avatar? { get }
  var alignment: ConversationUI.SenderAlignment { get }
}
public enum SenderAlignment {
  case left
  case right
  case auto
  public static func == (a: ConversationUI.SenderAlignment, b: ConversationUI.SenderAlignment) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum Avatar {
  case url(Foundation.URL)
  case image(UIKit.UIImage)
}
@_hasMissingDesignatedInitializers public class MenuElement {
  public var title: Swift.String
  public var image: UIKit.UIImage?
  @objc deinit
}
public typealias ActionHandler = (ConversationUI.Action) -> Swift.Void
@_hasMissingDesignatedInitializers public class Action : ConversationUI.MenuElement {
  public init(title: Swift.String = "", image: UIKit.UIImage? = nil, handler: @escaping ConversationUI.ActionHandler)
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers public class MessagesTableView : UIKit.UITableView {
  weak public var messagesDataSource: ConversationUI.MessagesDataSource?
  weak public var messageDelegate: ConversationUI.MessagesDelegate?
  public func scrollToLastItem(at position: UIKit.UITableView.ScrollPosition = .bottom, animated: Swift.Bool = true)
  public func reload(scrollingToLastItem: Swift.Bool)
  @objc override dynamic public init(frame: CoreGraphics.CGRect, style: UIKit.UITableView.Style)
  @objc deinit
}
public protocol Message {
  var sender: ConversationUI.Sender { get }
  var messageId: Swift.String { get }
  var sentDate: Foundation.Date { get }
  var kind: ConversationUI.MessageKind { get }
  var messageState: ConversationUI.MessageState { get }
}
public protocol InputBarDelegate : AnyObject {
  func inputBar(_ inputBar: ConversationUI.InputBar, didTapSendButtonWith text: Swift.String)
  func inputBar(_ inputBar: ConversationUI.InputBar, didTapUploadImageButton button: UIKit.UIButton)
  func inputBar(_ inputBar: ConversationUI.InputBar, didTapUploadDocumentButton button: UIKit.UIButton)
  func inputBar(_ inputBar: ConversationUI.InputBar, didTranslateButton button: UIKit.UIButton)
  func inputBar(_ inputBar: ConversationUI.InputBar, didUpdateBounds: CoreGraphics.CGRect)
  func inputBarTextViewDidBeginEditing(_ inputBar: ConversationUI.InputBar)
  func inputBarTextViewDidChange(_ inputBar: ConversationUI.InputBar, with text: Swift.String)
}
extension InputBarDelegate {
  public func inputBar(_ inputBar: ConversationUI.InputBar, didTapSendButtonWith text: Swift.String)
  public func inputBar(_ inputBar: ConversationUI.InputBar, didTapUploadImageButton button: UIKit.UIButton)
  public func inputBar(_ inputBar: ConversationUI.InputBar, didTapUploadDocumentButton button: UIKit.UIButton)
  public func inputBar(_ inputBar: ConversationUI.InputBar, didTranslateButton button: UIKit.UIButton)
  public func inputBar(_ inputBar: ConversationUI.InputBar, didUpdateBounds: CoreGraphics.CGRect)
  public func inputBarTextViewDidBeginEditing(_ inputBar: ConversationUI.InputBar)
  public func inputBarTextViewDidChange(_ inputBar: ConversationUI.InputBar, with text: Swift.String)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class InputBar : ConversationUI.XibView {
  public var text: Swift.String? {
    get
    set
  }
  public func dismissKeyboard()
  weak public var delegate: ConversationUI.InputBarDelegate?
  @objc override dynamic public var bounds: CoreGraphics.CGRect {
    @objc get
    @objc set
  }
  @objc deinit
}
extension InputBar : UIKit.UITextViewDelegate {
  @objc dynamic public func textViewDidBeginEditing(_ textView: UIKit.UITextView)
  @objc dynamic public func textViewDidChange(_ textView: UIKit.UITextView)
}
@objc @_inheritsConvenienceInitializers open class XibView : UIKit.UIView {
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @objc deinit
}
public protocol MessagesDataSource : AnyObject {
  func numberOfMessages() -> Swift.Int
  func message(at index: Swift.Int) -> ConversationUI.Message
  func currentSender() -> ConversationUI.Sender
}
public enum MessageState : Swift.Int, Swift.CaseIterable {
  case sending
  case sent
  case failure
  public init?(rawValue: Swift.Int)
  public typealias AllCases = [ConversationUI.MessageState]
  public typealias RawValue = Swift.Int
  public static var allCases: [ConversationUI.MessageState] {
    get
  }
  public var rawValue: Swift.Int {
    get
  }
}
public enum L10n {
  public static let accountAvatarAccessibility: Swift.String
  public static let accountUserDefaultName: Swift.String
  public static let activityTabBarTitle: Swift.String
  public static let addConversationTagDialogHint: Swift.String
  public static let addConversationTagDialogTitle: Swift.String
  public static let allMissions: Swift.String
  public static let alreadyHaveAnAccountMessage: Swift.String
  public static let androidCtyPlayStoreDescription: Swift.String
  public static let androidCtyPlayStoreDescriptionSmall: Swift.String
  public static let androidIbbuPlayStoreDescriptionSmall: Swift.String
  public static let assessmentCancelDialogMessage: Swift.String
  public static let assessmentCancelDialogQuit: Swift.String
  public static func assessmentEndingBrandMessage(_ p1: Any) -> Swift.String
  public static let assessmentEndingVisitorBonusMessage: Swift.String
  public static let assessmentEndingVisitorMessage: Swift.String
  public static let assessmentIntroductionBrandBonusMessage2: Swift.String
  public static let assessmentIntroductionBrandBonusMessage3: Swift.String
  public static let assessmentIntroductionBrandMessage1: Swift.String
  public static func assessmentIntroductionBrandMessage2(_ p1: Any) -> Swift.String
  public static let assessmentIntroductionBrandMessage3: Swift.String
  public static let assessmentIntroductionBrandMessage4: Swift.String
  public static let assessmentIntroductionMessageCancelChoice: Swift.String
  public static func assessmentIntroductionMessageConfirmChoice(_ p1: Any) -> Swift.String
  public static let assessmentIntroductionVisitorMessage: Swift.String
  public static let assessmentNextQuestionButton: Swift.String
  public static let assessmentPopupButtonTakeTheQuizz: Swift.String
  public static func assessmentPopupDetails(_ p1: Any) -> Swift.String
  public static let assessmentPopupTitle: Swift.String
  public static let assessmentSubmitButton: Swift.String
  public static let assessmentThanksVisitorMessage1: Swift.String
  public static let assessmentThanksVisitorMessage2: Swift.String
  public static let assessmentThanksVisitorMessage3: Swift.String
  public static func assessmentToolbarSubtitle(_ p1: Swift.Int, _ p2: Swift.Int) -> Swift.String
  public static func assessmentTransferMessage(_ p1: Any) -> Swift.String
  public static let asynchronousConversationExplanationContent1: Swift.String
  public static let asynchronousConversationExplanationContent1Expert: Swift.String
  public static let asynchronousConversationExplanationContent2: Swift.String
  public static let asynchronousConversationExplanationContent2Expert: Swift.String
  public static let asynchronousConversationExplanationDialogContentPart1: Swift.String
  public static func asynchronousConversationExplanationDialogContentPart2(_ p1: Any, _ p2: Any) -> Swift.String
  public static func asynchronousConversationExplanationDialogContentPart2Expert(_ p1: Any, _ p2: Any) -> Swift.String
  public static let asynchronousConversationExplanationDialogTitle: Swift.String
  public static let asynchronousConversationExplanationTitle: Swift.String
  public static let asynchronousConversationTutorialDialogContent1: Swift.String
  public static let asynchronousConversationTutorialDialogContent2: Swift.String
  public static func asynchronousConversationTutorialDialogContent3(_ p1: Any, _ p2: Any) -> Swift.String
  public static func asynchronousConversationTutorialDialogContent3Expert(_ p1: Any, _ p2: Any) -> Swift.String
  public static let asynchronousConversationTutorialDialogTitle: Swift.String
  public static let backgroundAvailabilityOffsite: Swift.String
  public static let backgroundAvailabilityOnsite: Swift.String
  public static let backgroundAvailabilityOnsiteOffsite: Swift.String
  public static func badgesThumbAccessibility(_ p1: Any) -> Swift.String
  public static let badgesTitle: Swift.String
  public static func badgesUnlockHeadline(_ p1: Any) -> Swift.String
  public static let cameraUsageDescription: Swift.String
  public static let campaignContractStatusApproved: Swift.String
  public static let campaignContractStatusDeclined: Swift.String
  public static let campaignContractStatusSent: Swift.String
  public static let campaignContractStatusTerminated: Swift.String
  public static let campaignSkillsAutoCar: Swift.String
  public static let campaignSkillsAutoMoto: Swift.String
  public static let campaignSkillsClothingAccessories: Swift.String
  public static let campaignSkillsClothingBeauty: Swift.String
  public static let campaignSkillsClothingChildrens: Swift.String
  public static let campaignSkillsClothingGlasses: Swift.String
  public static let campaignSkillsClothingHealth: Swift.String
  public static let campaignSkillsClothingJewelry: Swift.String
  public static let campaignSkillsClothingMen: Swift.String
  public static let campaignSkillsClothingPerfumes: Swift.String
  public static let campaignSkillsClothingShoes: Swift.String
  public static let campaignSkillsClothingWatches: Swift.String
  public static let campaignSkillsClothingWomen: Swift.String
  public static let campaignSkillsCollectionAntiques: Swift.String
  public static let campaignSkillsCollectionArt: Swift.String
  public static let campaignSkillsCollectionCoins: Swift.String
  public static let campaignSkillsCollectionStamps: Swift.String
  public static let campaignSkillsCollectionToys: Swift.String
  public static let campaignSkillsDIY: Swift.String
  public static let campaignSkillsDIY1: Swift.String
  public static let campaignSkillsFashion: Swift.String
  public static let campaignSkillsFashion1: Swift.String
  public static let campaignSkillsHightTechAudio: Swift.String
  public static let campaignSkillsHightTechElectronics: Swift.String
  public static let campaignSkillsHightTechMultimedia: Swift.String
  public static let campaignSkillsHightTechPhones: Swift.String
  public static let campaignSkillsHightTechVideoGames: Swift.String
  public static let campaignSkillsHomeBaby: Swift.String
  public static let campaignSkillsHomeBeer: Swift.String
  public static let campaignSkillsHomeDeco: Swift.String
  public static let campaignSkillsHomeElectricity: Swift.String
  public static let campaignSkillsHomeEnergy: Swift.String
  public static let campaignSkillsHomeFood: Swift.String
  public static let campaignSkillsHomeGarden: Swift.String
  public static let campaignSkillsHomeHobbies: Swift.String
  public static let campaignSkillsHomeHouseholdelectrical: Swift.String
  public static let campaignSkillsHomePet: Swift.String
  public static let campaignSkillsHomePlumbing: Swift.String
  public static let campaignSkillsHomeTools: Swift.String
  public static let campaignSkillsHomeWine: Swift.String
  public static let campaignSkillsInstrumentsKeyboard: Swift.String
  public static let campaignSkillsInstrumentsPercussion: Swift.String
  public static let campaignSkillsInstrumentsString: Swift.String
  public static let campaignSkillsInstrumentsWind: Swift.String
  public static let campaignSkillsMediaBooks: Swift.String
  public static let campaignSkillsMediaMovies: Swift.String
  public static let campaignSkillsMediaMusic: Swift.String
  public static let campaignSkillsOtherServices: Swift.String
  public static let campaignSkillsOtherTourism: Swift.String
  public static let campaignSkillsOtherTraining: Swift.String
  public static let campaignSkillsRunning: Swift.String
  public static let campaignSkillsRunning1: Swift.String
  public static let campaignSkillsSportCycling: Swift.String
  public static let campaignSkillsSportFishing: Swift.String
  public static let campaignSkillsSportHunting: Swift.String
  public static let campaignSkillsSportMatial: Swift.String
  public static let campaignSkillsSportOutdoors: Swift.String
  public static let campaignSkillsSportRacquet: Swift.String
  public static let campaignSkillsSportTeam: Swift.String
  public static let campaignSkillsSportWater: Swift.String
  public static let campaignSkillsSportWinter: Swift.String
  public static let campaignSkillsVideoGames: Swift.String
  public static let campaignSkillsVideoGames1: Swift.String
  public static let campaigndetailApplyNowButton: Swift.String
  public static let campaigndetailCampaignStatusDeleted: Swift.String
  public static let campaigndetailCampaignStatusInprogress: Swift.String
  public static func campaigndetailCampaignStatusOpen(_ p1: Swift.Int) -> Swift.String
  public static let campaigndetailCampaignStatusOpenToday: Swift.String
  public static let campaigndetailCampaignStatusSuspended: Swift.String
  public static let campaigndetailFullButton: Swift.String
  public static let campaignsListTabBarTitle: Swift.String
  public static let cannedAnswerCategoriesFooter: Swift.String
  public static let cannedAnswerCreateCategory: Swift.String
  public static let cannedAnswers: Swift.String
  public static let cannedAnswersAddToCannedAnswers: Swift.String
  public static let cannedAnswersCannedAnswer: Swift.String
  public static let cannedAnswersCannedAnswerAlreadyExistsErrorMessage: Swift.String
  public static let cannedAnswersCannedAnswerPlaceholder: Swift.String
  public static let cannedAnswersCategory: Swift.String
  public static let cannedAnswersCategoryAlreadyExistsErrorMessage: Swift.String
  public static let cannedAnswersCategoryPlaceholder: Swift.String
  public static let cannedAnswersCreateCategoryAlertActionCreate: Swift.String
  public static let cannedAnswersCreateCategoryAlertMessage: Swift.String
  public static let cannedAnswersCreateCategoryAlertTitle: Swift.String
  public static let cannedAnswersDeleteCannedAnswerAlertMessage: Swift.String
  public static let cannedAnswersDeleteCannedAnswerAlertTitle: Swift.String
  public static let cannedAnswersDeleteCategoryAlertMessage: Swift.String
  public static let cannedAnswersDeleteCategoryAlertTitle: Swift.String
  public static let cannedAnswersFooter: Swift.String
  public static let cannedAnswersNewCannedAnswer: Swift.String
  public static let cannedAnswersRenameAlertActionRename: Swift.String
  public static let cannedAnswersRenameAlertMessage: Swift.String
  public static let cannedAnswersRenameAlertTitle: Swift.String
  public static let chatBlockVisitorButtonText: Swift.String
  public static let chatBlockVisitorMessage: Swift.String
  public static let chatCloseButtonText: Swift.String
  public static let chatCloseMessage: Swift.String
  public static let chatComposeButtonSend: Swift.String
  public static let chatComposeHint: Swift.String
  public static let chatItemExpertMessageStatus: Swift.String
  public static let chatItemSystemUserBack: Swift.String
  public static let chatItemSystemUserChatClose: Swift.String
  public static let chatItemSystemUserLeft: Swift.String
  public static let chatMenuOpenCurrentPage: Swift.String
  public static func chatSnoozeButtonText(_ p1: Any) -> Swift.String
  public static func chatSnoozeMessage(_ p1: Any) -> Swift.String
  public static let chatTitle: Swift.String
  public static func chatTransferMessage(_ p1: Any) -> Swift.String
  public static func chatTransferReasonMessage(_ p1: Any) -> Swift.String
  public static let chatUploadExpert: Swift.String
  public static let chatUploadVisitor: Swift.String
  public static let chatlistEmptyHeadline: Swift.String
  public static let chatlistEmptySubline: Swift.String
  public static let chatlistMaxChats: Swift.String
  public static let chatlistMenuPopupAvailable: Swift.String
  public static let chatlistMenuPopupAvailableOffsite: Swift.String
  public static let chatlistMenuPopupAvailableOnsite: Swift.String
  public static let chatlistMenuPopupAvailableVideo: Swift.String
  public static let chatlistMenuPopupLogout: Swift.String
  public static let close: Swift.String
  public static let closeConversationTitle: Swift.String
  public static let commonButtonOk: Swift.String
  public static let commonCancel: Swift.String
  public static let commonChatSectionTitle: Swift.String
  public static let commonCopy: Swift.String
  public static let commonCreate: Swift.String
  public static let commonDeleteAction: Swift.String
  public static let commonEditAction: Swift.String
  public static let commonFilterTitle: Swift.String
  public static let commonMoreInfo: Swift.String
  public static func commonNHours(_ p1: Any, _ p2: Any, _ p3: Any) -> Swift.String
  public static let commonNext: Swift.String
  public static let commonOr: Swift.String
  public static let commonPrevious: Swift.String
  public static let commonProfileSectionTitle: Swift.String
  public static let commonReset: Swift.String
  public static let commonSettings: Swift.String
  public static let commonSkip: Swift.String
  public static let commonSubmit: Swift.String
  public static let composeFileAccessibility: Swift.String
  public static let composeImageAccessibility: Swift.String
  public static let continueWithAppleButton: Swift.String
  public static let continueWithFacebookButton: Swift.String
  public static let continueWithGoogleButton: Swift.String
  public static func conversationItemNewMessageCount(_ p1: Swift.Int, _ p2: Swift.Int) -> Swift.String
  public static let conversationLoadPastConversation: Swift.String
  public static let conversationPlusButtonAccessibility: Swift.String
  public static let conversationSendFile: Swift.String
  public static let conversationSendPictureFromCamera: Swift.String
  public static let conversationSendPictureFromLibrary: Swift.String
  public static let conversationSendVideoInvitation: Swift.String
  public static let conversationTagAlreadyExistsErrorMessage: Swift.String
  public static let conversationTagsAddTitle: Swift.String
  public static let conversationTagsTitle: Swift.String
  public static let conversationTagsTitleMandatory: Swift.String
  public static let conversationVideoEscalationAccepted: Swift.String
  public static let conversationVideoEscalationEndedDeclinedOperator: Swift.String
  public static let conversationVideoEscalationEndedDeclinedVisitor: Swift.String
  public static let conversationVideoEscalationEndedHangUpOperator: Swift.String
  public static let conversationVideoEscalationEndedHangUpVisitor: Swift.String
  public static let conversationVideoEscalationInvitationJoin: Swift.String
  public static let conversationVideoEscalationInvitationSubtitle: Swift.String
  public static let conversationVideoEscalationInvitationTitle: Swift.String
  public static let conversationVideoIndicator: Swift.String
  public static let conversationVideoVisitorWillJoin: Swift.String
  public static let dayShort: Swift.String
  public static let dialogConnectionConflictButtonLogout: Swift.String
  public static let dialogConnectionConflictButtonReconnect: Swift.String
  public static let dialogConnectionConflictErrorMessage: Swift.String
  public static let dontHaveAnAccountYetMessage: Swift.String
  public static let editProfileBirthdate: Swift.String
  public static let editProfileBirthdateVerify: Swift.String
  public static let editProfileChangePicture: Swift.String
  public static let editProfileCity: Swift.String
  public static let editProfileDescription: Swift.String
  public static let editProfileDescriptionHint: Swift.String
  public static let editProfileDescriptionPrivate: Swift.String
  public static let editProfileFirstname: Swift.String
  public static let editProfileFirstnamePrivate: Swift.String
  public static let editProfileLastname: Swift.String
  public static let editProfileLastnamePrivate: Swift.String
  public static let editProfileOptional: Swift.String
  public static let editProfilePhone: Swift.String
  public static let editProfilePhonePrivate: Swift.String
  public static let expertAvatarAccessibility: Swift.String
  public static let expertAvatarClickAccessibility: Swift.String
  public static let expertProfileTitle: Swift.String
  public static let expertiseCategoryHeader: Swift.String
  public static let expertiseCategoryTitle: Swift.String
  public static func expertiseCount(_ p1: Swift.Int) -> Swift.String
  public static let expertiseHeader: Swift.String
  public static let forgotAlreadyMemberLink: Swift.String
  public static let forgotAlreadyMemberMessage: Swift.String
  public static let forgotBackLogin: Swift.String
  public static let forgotHeadline: Swift.String
  public static let forgotSendLink: Swift.String
  public static let forgotSubline: Swift.String
  public static let forgotSuccessHeadline: Swift.String
  public static func forgotSuccessSubline(_ p1: Any) -> Swift.String
  public static let globalActionRetry: Swift.String
  public static let globalBannerNoInternetConnection: Swift.String
  public static let globalBannerReconnection: Swift.String
  public static let globalRequestFailedError: Swift.String
  public static let globalRequestFailedShortError: Swift.String
  public static let hourShort: Swift.String
  public static let iadvizeAcademy: Swift.String
  public static let ibbuAcademy: Swift.String
  public static let ibbuEditProfileDescriptionHint: Swift.String
  public static let ibbuEditProfileDescriptionPrivate: Swift.String
  public static let ibbuEditProfileLastnamePrivate: Swift.String
  public static let ibbuExpertisesBeautyAndHealthBodyCareProducts: Swift.String
  public static let ibbuExpertisesBeautyAndHealthCosmetics: Swift.String
  public static let ibbuExpertisesBeautyAndHealthNutritionAndDietetics: Swift.String
  public static let ibbuExpertisesBeautyAndHealthWellBeingAndnaturopathy: Swift.String
  public static let ibbuExpertisesCategoryBeautyAndHealth: Swift.String
  public static let ibbuExpertisesCategoryChildhood: Swift.String
  public static let ibbuExpertisesCategoryDiy: Swift.String
  public static let ibbuExpertisesCategoryEntertainment: Swift.String
  public static let ibbuExpertisesCategoryFashion: Swift.String
  public static let ibbuExpertisesCategoryHighTech: Swift.String
  public static let ibbuExpertisesCategoryHouse: Swift.String
  public static let ibbuExpertisesCategoryLifeStyle: Swift.String
  public static let ibbuExpertisesCategorySportAndOutdoorActivities: Swift.String
  public static let ibbuExpertisesCategoryTravel: Swift.String
  public static let ibbuExpertisesCategoryVehicles: Swift.String
  public static let ibbuExpertisesChildhoodChildcare: Swift.String
  public static let ibbuExpertisesChildhoodKidsFashion: Swift.String
  public static let ibbuExpertisesChildhoodToysAndGames: Swift.String
  public static let ibbuExpertisesDiyCarpentry: Swift.String
  public static let ibbuExpertisesDiyElectricity: Swift.String
  public static let ibbuExpertisesDiyPainting: Swift.String
  public static let ibbuExpertisesDiyPlumbing: Swift.String
  public static let ibbuExpertisesDiyStructuralWork: Swift.String
  public static let ibbuExpertisesDiyToolsAndHardware: Swift.String
  public static let ibbuExpertisesEntertainmentArts: Swift.String
  public static let ibbuExpertisesEntertainmentConsolesVideoGames: Swift.String
  public static let ibbuExpertisesEntertainmentLiterature: Swift.String
  public static let ibbuExpertisesEntertainmentMusic: Swift.String
  public static let ibbuExpertisesEntertainmentOnlineGambling: Swift.String
  public static let ibbuExpertisesFashionJewelryAndAccessories: Swift.String
  public static let ibbuExpertisesFashionLeatherGoodsAndLuggage: Swift.String
  public static let ibbuExpertisesFashionMensFashion: Swift.String
  public static let ibbuExpertisesFashionShoes: Swift.String
  public static let ibbuExpertisesFashionWomensFashion: Swift.String
  public static let ibbuExpertisesHighTechAudioAndHiFi: Swift.String
  public static let ibbuExpertisesHighTechComputing: Swift.String
  public static let ibbuExpertisesHighTechElectronicCigarette: Swift.String
  public static let ibbuExpertisesHighTechPhotoAndCamcorders: Swift.String
  public static let ibbuExpertisesHighTechSmartHome: Swift.String
  public static let ibbuExpertisesHighTechSmartphonesAndTablets: Swift.String
  public static let ibbuExpertisesHighTechTvAndHomeCinema: Swift.String
  public static let ibbuExpertisesHouseBedding: Swift.String
  public static let ibbuExpertisesHouseFurniture: Swift.String
  public static let ibbuExpertisesHouseGardening: Swift.String
  public static let ibbuExpertisesHouseHouseholdAppliances: Swift.String
  public static let ibbuExpertisesHouseInteriorDecoration: Swift.String
  public static let ibbuExpertisesHousePets: Swift.String
  public static let ibbuExpertisesHouseTableware: Swift.String
  public static let ibbuExpertisesLifeStyleExperiencesToOffer: Swift.String
  public static let ibbuExpertisesLifeStyleFood: Swift.String
  public static let ibbuExpertisesLifeStyleLuxury: Swift.String
  public static let ibbuExpertisesLifeStyleSpirits: Swift.String
  public static let ibbuExpertisesLifeStyleWine: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesBoating: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesClimbing: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesCombatSports: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesFitnessStrengthTraining: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesHiking: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesHorsebackRiding: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesRacquetSports: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesRunning: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesTeamSports: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesWaterSports: Swift.String
  public static let ibbuExpertisesSportAndOutdoorActivitiesWinterSports: Swift.String
  public static let ibbuExpertisesTravelAirlines: Swift.String
  public static let ibbuExpertisesTravelCamping: Swift.String
  public static let ibbuExpertisesTravelCruises: Swift.String
  public static let ibbuExpertisesTravelHotelsAndClubs: Swift.String
  public static let ibbuExpertisesTravelPublicTransportation: Swift.String
  public static let ibbuExpertisesTravelTravelAgencies: Swift.String
  public static let ibbuExpertisesVehiclesBikes: Swift.String
  public static let ibbuExpertisesVehiclesCampers: Swift.String
  public static let ibbuExpertisesVehiclesCars: Swift.String
  public static let ibbuExpertisesVehiclesMotorcycles: Swift.String
  public static let ibbuExpertisesVehiclesUrbanMobility: Swift.String
  public static let ibbuLoginErrorMessageInvalidInformation: Swift.String
  public static let ibbuLoginJoinUsLink: Swift.String
  public static let ibbuLoginJoinUsTitle: Swift.String
  public static let ibbuLoginTextfieldEmail: Swift.String
  public static let ibbuLoginTextfieldPassword: Swift.String
  public static let ibbuLoginTitle: Swift.String
  public static let iosIbbuAppStoreDescription: Swift.String
  public static let joinIbbu: Swift.String
  public static let latestAvailableMissions: Swift.String
  public static let leaderboardConversationsAbbreviation: Swift.String
  public static func leaderboardDateRange(_ p1: Any, _ p2: Any) -> Swift.String
  public static let leaderboardNoRankingAvailable: Swift.String
  public static let leaderboardPointsExplanationDetails: Swift.String
  public static let leaderboardPointsExplanationTitle: Swift.String
  public static func leaderboardPositionCurrent(_ p1: Swift.Int) -> Swift.String
  public static let leaderboardPositionEmpty: Swift.String
  public static func leaderboardPositionPast(_ p1: Swift.Int) -> Swift.String
  public static let leaderboardSatisfactionAbbreviation: Swift.String
  public static let leaderboardWeekCurrent: Swift.String
  public static let leaderboardWeekLast: Swift.String
  public static func leaderboardWeekPast(_ p1: Swift.Int) -> Swift.String
  public static let leaderboards: Swift.String
  public static let legalDocumentsIdentityProof: Swift.String
  public static let legalInformationBillingAddress: Swift.String
  public static let legalInformationBillingAddressHeader: Swift.String
  public static let legalInformationBillingAddressPlaceholder: Swift.String
  public static let legalInformationBillingCity: Swift.String
  public static let legalInformationBillingCityPlaceholder: Swift.String
  public static let legalInformationBillingInformationDetail: Swift.String
  public static let legalInformationBillingInformationTitle: Swift.String
  public static let legalInformationBillingName: Swift.String
  public static let legalInformationBillingNameFooter: Swift.String
  public static let legalInformationBillingNamePlaceholder: Swift.String
  public static let legalInformationBillingRegistrationNumber: Swift.String
  public static let legalInformationBillingRegistrationNumberPlaceholder: Swift.String
  public static let legalInformationBillingVatNumber: Swift.String
  public static let legalInformationBillingVatNumberFooter: Swift.String
  public static let legalInformationBillingVatNumberPlaceholder: Swift.String
  public static let legalInformationBillingVatRate: Swift.String
  public static let legalInformationBillingZip: Swift.String
  public static let legalInformationBillingZipPlaceholder: Swift.String
  public static let legalInformationCountry: Swift.String
  public static let legalInformationCountryDetail: Swift.String
  public static let legalInformationDateOfBirth: Swift.String
  public static let legalInformationDocumentStatusFailed: Swift.String
  public static let legalInformationDocumentStatusInProgress: Swift.String
  public static let legalInformationDocumentStatusSucceeded: Swift.String
  public static let legalInformationDocumentUploadButton: Swift.String
  public static let legalInformationDocumentUploadConfirmation: Swift.String
  public static let legalInformationDocumentsDetail: Swift.String
  public static let legalInformationDocumentsHeader: Swift.String
  public static let legalInformationDocumentsTitle: Swift.String
  public static let legalInformationFillInButton: Swift.String
  public static let legalInformationGeneralInformationConfirm: Swift.String
  public static let legalInformationGeneralInformationConfirmAlert: Swift.String
  public static let legalInformationGeneralInformationDetail: Swift.String
  public static let legalInformationGeneralInformationHeader: Swift.String
  public static let legalInformationGeneralInformationTitle: Swift.String
  public static let legalInformationHeaderDetail: Swift.String
  public static func legalInformationHeaderTitle(_ p1: Any) -> Swift.String
  public static let legalInformationIdentityProof: Swift.String
  public static let legalInformationIdentityProofFooter: Swift.String
  public static let legalInformationIdentityProofHeader: Swift.String
  public static let legalInformationLegalType: Swift.String
  public static let legalInformationLegalTypeBusiness: Swift.String
  public static let legalInformationLegalTypeBusinessDetail: Swift.String
  public static let legalInformationLegalTypeDetail: Swift.String
  public static let legalInformationLegalTypeFooter: Swift.String
  public static let legalInformationLegalTypeHeader: Swift.String
  public static let legalInformationLegalTypeNatural: Swift.String
  public static let legalInformationLegalTypeOrganization: Swift.String
  public static let legalInformationLegalTypeSoletrader: Swift.String
  public static let legalInformationLegalTypeSoletraderDetail: Swift.String
  public static let legalInformationNationality: Swift.String
  public static let legalInformationNonFrenchButton: Swift.String
  public static let legalInformationNonFrenchMessage: Swift.String
  public static let legalInformationNonSoletraderMessage: Swift.String
  public static let legalInformationPaymentDetail: Swift.String
  public static let legalInformationPaymentFooter: Swift.String
  public static let legalInformationPaymentHeader: Swift.String
  public static let legalInformationPaymentIban: Swift.String
  public static let legalInformationPaymentIbanError: Swift.String
  public static let legalInformationPaymentIbanPlaceholder: Swift.String
  public static let legalInformationPaymentTitle: Swift.String
  public static let legalInformationRegistrationProof: Swift.String
  public static let legalInformationRegistrationProofFooter: Swift.String
  public static let legalInformationRegistrationReceipt: Swift.String
  public static let legalInformationRegistrationReceiptFooter: Swift.String
  public static let legalInformationRegistrationReceiptHeader: Swift.String
  public static let licensesTitle: Swift.String
  public static let livefeedBannerSeeNews: Swift.String
  public static let livefeedCategoryPrefix: Swift.String
  public static let livefeedCommentHeaderText: Swift.String
  public static func livefeedCommentsCount(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static let livefeedCommentsEmptySubtitle: Swift.String
  public static let livefeedCommentsEmptyTitle: Swift.String
  public static let livefeedContentEdited: Swift.String
  public static let livefeedDeleteCommentConfirmationMessage: Swift.String
  public static let livefeedDeletePublicationConfirmationMessage: Swift.String
  public static let livefeedEditCommentComposeTitle: Swift.String
  public static let livefeedEditPublicationTitle: Swift.String
  public static func livefeedElapsedTimeDays(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static func livefeedElapsedTimeHours(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static func livefeedElapsedTimeMinutes(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static func livefeedElapsedTimeSeconds(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static let livefeedEmptyPublicationsMessage: Swift.String
  public static let livefeedEmptyPublicationsSubline: Swift.String
  public static let livefeedFilterAll: Swift.String
  public static let livefeedFollowersCommunityManager: Swift.String
  public static let livefeedImportantPublicationMessage: Swift.String
  public static let livefeedLikedByMe: Swift.String
  public static func livefeedLikedByMeAndSomeone(_ p1: Any) -> Swift.String
  public static func livefeedLikedByMeSomeoneAndOthers(_ p1: Any, _ p2: Swift.Int) -> Swift.String
  public static func livefeedLikedBySomeone(_ p1: Any) -> Swift.String
  public static func livefeedLikedBySomeoneAndOthers(_ p1: Any, _ p2: Swift.Int) -> Swift.String
  public static func livefeedLikesCount(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static let livefeedLikesMe: Swift.String
  public static func livefeedLikesMeAndSomeone(_ p1: Any) -> Swift.String
  public static func livefeedLikesMeSomeoneAndOthers(_ p1: Any, _ p2: Swift.Int) -> Swift.String
  public static func livefeedLikesSomeoneAndOthers(_ p1: Any, _ p2: Swift.Int) -> Swift.String
  public static let livefeedLikesTitle: Swift.String
  public static let livefeedNewButton: Swift.String
  public static let livefeedNewCommentButtonPost: Swift.String
  public static let livefeedNewCommentPlaceholder: Swift.String
  public static let livefeedNewPublicationCancelDiscard: Swift.String
  public static let livefeedNewPublicationCancelMessage: Swift.String
  public static let livefeedNewPublicationNow: Swift.String
  public static let livefeedNewPublicationOnSimpleTitle: Swift.String
  public static let livefeedNewPublicationPlaceholder: Swift.String
  public static let livefeedNewPublicationShareTitle: Swift.String
  public static let livefeedNewPublicationTitle: Swift.String
  public static let livefeedNoWebsitePublicationsMessage: Swift.String
  public static func livefeedPublicationOn(_ p1: Any, _ p2: Any) -> Swift.String
  public static let livefeedPublicationTitle: Swift.String
  public static let livefeedSeeMoreButton: Swift.String
  public static let livefeedTabBarTitle: Swift.String
  public static let livefeedUploadFailed: Swift.String
  public static let loginButtonConnect: Swift.String
  public static let loginButtonForgot: Swift.String
  public static let loginErrorMessageConnectionProblem: Swift.String
  public static let loginErrorMessageInvalidEmail: Swift.String
  public static let loginErrorMessageInvalidInformation: Swift.String
  public static let loginErrorMessageSessionExpired: Swift.String
  public static let loginErrorTitle: Swift.String
  public static let loginInvalidCredentials: Swift.String
  public static let loginTextfieldEmail: Swift.String
  public static let loginTextfieldPassword: Swift.String
  public static let loginTitle: Swift.String
  public static let maxChatFooterMessage: Swift.String
  public static let maxChatTitle: Swift.String
  public static func maxChatValue(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static let mediaCloseButtonAccessibility: Swift.String
  public static let mediaFullscreenAccessibility: Swift.String
  public static let mediaThumbAccessibility: Swift.String
  public static let microphoneUsageDescription: Swift.String
  public static let minuteShort: Swift.String
  public static let missionBonus: Swift.String
  public static let missionDetailBannerAccessibility: Swift.String
  public static let missionDetailLogoAccessibility: Swift.String
  public static let missionListEmptyHeadline: Swift.String
  public static func missionPaymentPerChat(_ p1: Any) -> Swift.String
  public static func missionPaymentPerTransaction(_ p1: Any) -> Swift.String
  public static let missionsContractsStatusDeclined: Swift.String
  public static let missionsContractsStatusInProgress: Swift.String
  public static let missionsContractsStatusTerminated: Swift.String
  public static let missionsContractsStatusWaitingForResults: Swift.String
  public static let missionsStatusLive: Swift.String
  public static let missionsStatusSoon: Swift.String
  public static let myApplications: Swift.String
  public static let myLatestMissions: Swift.String
  public static let myMissions: Swift.String
  public static let navigationLivefeedTitle: Swift.String
  public static let notificationCampaignChannel: Swift.String
  public static let notificationConversationChannel: Swift.String
  public static let notificationConversationService: Swift.String
  public static let notificationLivefeedChannel: Swift.String
  public static let notificationNewChat: Swift.String
  public static let notificationNewChatMessage: Swift.String
  public static let notificationOtherChannel: Swift.String
  public static let notificationPreferencesApplicationAcceptedRefusedParent: Swift.String
  public static let notificationPreferencesBadgeParent: Swift.String
  public static let notificationPreferencesEmailTitle: Swift.String
  public static let notificationPreferencesEmptyHeadline: Swift.String
  public static let notificationPreferencesEmptySubline: Swift.String
  public static let notificationPreferencesMobileTitle: Swift.String
  public static let notificationPreferencesPublicationCommented: Swift.String
  public static let notificationPreferencesPublicationCreated: Swift.String
  public static let notificationPreferencesPublicationLiked: Swift.String
  public static let notificationPreferencesSatisfaction: Swift.String
  public static let notificationPreferencesTitle: Swift.String
  public static let notificationSatisfactionChannel: Swift.String
  public static func notificationTransferredConversationBody(_ p1: Any) -> Swift.String
  public static let notificationTransferredConversationTitle: Swift.String
  public static let notificationVideoCallChannel: Swift.String
  public static let offSiteConversationChatlistMaxChatsMessage: Swift.String
  public static let offSiteConversationCloseCancelButton: Swift.String
  public static let offSiteConversationCloseMessage: Swift.String
  public static let offSiteConversationCloseMessageNew: Swift.String
  public static let offSiteConversationExplanationDialogContent: Swift.String
  public static let offSiteConversationExplanationDialogContentPart1: Swift.String
  public static let offSiteConversationExplanationDialogContentPart1New: Swift.String
  public static let offSiteConversationExplanationDialogContentPart2: Swift.String
  public static func offSiteConversationExplanationDialogTitle(_ p1: Any) -> Swift.String
  public static let offSiteConversationExplanationDialogTitlePart1: Swift.String
  public static let offSiteConversationExplanationDialogTitlePart1New: Swift.String
  public static let offSiteConversationExplanationDialogTitlePart2: Swift.String
  public static func offSiteConversationFromTheAppMessage(_ p1: Any) -> Swift.String
  public static let offSiteConversationMaxChatFooterMessage: Swift.String
  public static let offSiteConversationTutorialDialogButton: Swift.String
  public static let offSiteConversationTutorialDialogContent: Swift.String
  public static let offSiteConversationTutorialDialogContentNew: Swift.String
  public static let offSiteConversationTutorialDialogNewFeatureMessage: Swift.String
  public static let offSiteConversationTutorialDialogTitle: Swift.String
  public static let onboardingSuccessLetsGo: Swift.String
  public static let onboardingSuccessNextStep1: Swift.String
  public static let onboardingSuccessNextStep2: Swift.String
  public static let onboardingSuccessNextStep3: Swift.String
  public static let onboardingSuccessSubtitle: Swift.String
  public static let onboardingSuccessTitle: Swift.String
  public static let onboardingSuccessWhatsNext: Swift.String
  public static let password10CharactersMessage: Swift.String
  public static let password1LowercaseMessage: Swift.String
  public static let password1NumberMessage: Swift.String
  public static let password1SpecialCharacterMessage: Swift.String
  public static let password1UppercaseMessage: Swift.String
  public static let paymentDetailChatNumber: Swift.String
  public static let paymentDetailChatUnitAmount: Swift.String
  public static func paymentDetailEarnings(_ p1: Any) -> Swift.String
  public static let paymentDetailSummary: Swift.String
  public static let paymentDetailTransactionCommission: Swift.String
  public static let paymentDetailTransactionNumber: Swift.String
  public static let paymentDetailTurnoverGenerated: Swift.String
  public static let paymentDownloadCustomerInvoicesTitle: Swift.String
  public static let paymentDownloadIadvizeInvoiceTitle: Swift.String
  public static let paymentDownloadInvoicesTitle: Swift.String
  public static let paymentHistoryEmptyHeadline: Swift.String
  public static let paymentHistoryEmptySubline: Swift.String
  public static let paymentHistoryTitle: Swift.String
  public static let paymentInvoicesDetailIadvizeCommission: Swift.String
  public static func paymentInvoicesDetailInvoice(_ p1: Any) -> Swift.String
  public static let paymentInvoicesDetailSummary: Swift.String
  public static let personalInformation: Swift.String
  public static let personalInformationCompany: Swift.String
  public static let personalInformationCountry: Swift.String
  public static let personalInformationCountryFooter: Swift.String
  public static let personalInformationDisplayedName: Swift.String
  public static let personalInformationDisplayedNameFooter: Swift.String
  public static let personalInformationDisplayedNamePlaceholder: Swift.String
  public static let personalInformationFirstName: Swift.String
  public static let personalInformationFirstNamePlaceholder: Swift.String
  public static let personalInformationHeader: Swift.String
  public static let personalInformationInvalidFieldError: Swift.String
  public static let personalInformationLastName: Swift.String
  public static let personalInformationLastNamePlaceholder: Swift.String
  public static let personalInformationLegalType: Swift.String
  public static let personalInformationPhoneNumber: Swift.String
  public static let personalInformationPhoneNumberCountry: Swift.String
  public static let personalInformationPhoneNumberFooter: Swift.String
  public static let personalInformationPhoneNumberPlaceholder: Swift.String
  public static let photoLibraryAccessAlertMessage: Swift.String
  public static let photoLibraryAccessAlertTitle: Swift.String
  public static let photoLibraryUsageDescription: Swift.String
  public static func placeholderExamplePrefix(_ p1: Any) -> Swift.String
  public static func pointsCountAbbreviation(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static let pointsExplanationConversations: Swift.String
  public static let pointsExplanationConversationsCount: Swift.String
  public static let pointsExplanationRewards: Swift.String
  public static let pointsExplanationRewardsCount: Swift.String
  public static let pointsExplanationSatisfaction: Swift.String
  public static let pointsExplanationSatisfactionCount: Swift.String
  public static let productListProductAvailable: Swift.String
  public static let productListProductUnavailable: Swift.String
  public static let profileViewConversations: Swift.String
  public static let profileViewConversationsTemporality: Swift.String
  public static func profileViewLevel(_ p1: Any) -> Swift.String
  public static func profileViewMemberSince(_ p1: Any) -> Swift.String
  public static let profileViewSatisfaction: Swift.String
  public static let profileViewSatisfactionTemporality: Swift.String
  public static let profileViewStatusAmbassador: Swift.String
  public static let profileViewStatusBeginner: Swift.String
  public static let profileViewStatusExperienced: Swift.String
  public static let profileViewStatusInspiring: Swift.String
  public static func profileViewTotalScore(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static let reportIssueChooserDialogMessage: Swift.String
  public static let reportIssueNoMailApplication: Swift.String
  public static let requiredFieldExplanation: Swift.String
  public static let screenshotStoreApply: Swift.String
  public static let screenshotStoreCampaigns: Swift.String
  public static let screenshotStoreChat: Swift.String
  public static let screenshotStoreLivefeed: Swift.String
  public static let screenshotStoreStats: Swift.String
  public static let screenshotsCampaignBrand1: Swift.String
  public static let screenshotsCampaignBrand2: Swift.String
  public static let screenshotsCampaignBrand3: Swift.String
  public static let screenshotsCampaignBrand4: Swift.String
  public static let screenshotsCampaignBrand5: Swift.String
  public static let screenshotsCampaignBrand6: Swift.String
  public static let screenshotsCampaignDescription1: Swift.String
  public static let screenshotsCampaignDescription2: Swift.String
  public static let screenshotsCampaignName1: Swift.String
  public static let screenshotsCampaignName2: Swift.String
  public static let screenshotsCampaignName3: Swift.String
  public static let screenshotsCampaignName4: Swift.String
  public static let screenshotsCampaignName5: Swift.String
  public static let screenshotsCampaignName6: Swift.String
  public static let screenshotsCampaignTeaser1: Swift.String
  public static let screenshotsCampaignTeaser2: Swift.String
  public static let screenshotsCampaignTeaser3: Swift.String
  public static let screenshotsCannedAnswer: Swift.String
  public static let screenshotsCannedAnswer1: Swift.String
  public static let screenshotsCannedAnswer2: Swift.String
  public static let screenshotsChat1Message1: Swift.String
  public static let screenshotsChat1Message2: Swift.String
  public static let screenshotsChat1Message3: Swift.String
  public static let screenshotsChat1Message4: Swift.String
  public static let screenshotsChat1Message5: Swift.String
  public static let screenshotsChat1Message6: Swift.String
  public static let screenshotsChat1Message7: Swift.String
  public static let screenshotsChat1Message8: Swift.String
  public static let screenshotsChat1Message9: Swift.String
  public static let screenshotsChat2Message1: Swift.String
  public static let screenshotsChat2Message2: Swift.String
  public static let screenshotsChat2Message3: Swift.String
  public static let screenshotsChat2Message4: Swift.String
  public static let screenshotsChat2Message5: Swift.String
  public static let screenshotsChat2Message6: Swift.String
  public static let screenshotsChat2Message7: Swift.String
  public static let screenshotsChat2Message8: Swift.String
  public static let screenshotsChat3Message1: Swift.String
  public static let screenshotsChat3Message2: Swift.String
  public static let screenshotsChat3Message3: Swift.String
  public static let screenshotsChat3Message4: Swift.String
  public static let screenshotsChat3Message5: Swift.String
  public static let screenshotsChat3Message6: Swift.String
  public static let screenshotsChat3Message7: Swift.String
  public static let screenshotsChat3Message8: Swift.String
  public static let screenshotsLivefeedAuthorFirstName1: Swift.String
  public static let screenshotsLivefeedAuthorFirstName10: Swift.String
  public static let screenshotsLivefeedAuthorFirstName11: Swift.String
  public static let screenshotsLivefeedAuthorFirstName12: Swift.String
  public static let screenshotsLivefeedAuthorFirstName13: Swift.String
  public static let screenshotsLivefeedAuthorFirstName14: Swift.String
  public static let screenshotsLivefeedAuthorFirstName15: Swift.String
  public static let screenshotsLivefeedAuthorFirstName2: Swift.String
  public static let screenshotsLivefeedAuthorFirstName3: Swift.String
  public static let screenshotsLivefeedAuthorFirstName4: Swift.String
  public static let screenshotsLivefeedAuthorFirstName5: Swift.String
  public static let screenshotsLivefeedAuthorFirstName6: Swift.String
  public static let screenshotsLivefeedAuthorFirstName7: Swift.String
  public static let screenshotsLivefeedAuthorFirstName8: Swift.String
  public static let screenshotsLivefeedAuthorFirstName9: Swift.String
  public static let screenshotsLivefeedAuthorName1: Swift.String
  public static let screenshotsLivefeedAuthorName2: Swift.String
  public static let screenshotsLivefeedAuthorName3: Swift.String
  public static let screenshotsLivefeedAuthorName4: Swift.String
  public static let screenshotsLivefeedMessage1: Swift.String
  public static let screenshotsLivefeedMessage2: Swift.String
  public static let screenshotsLivefeedMessage2Comment1: Swift.String
  public static let screenshotsLivefeedMessage2Comment2: Swift.String
  public static let screenshotsLivefeedMessage3: Swift.String
  public static let screenshotsLivefeedMessage4: Swift.String
  public static let screenshotsLivefeedMessage4Comment1: Swift.String
  public static let screenshotsLivefeedMessage4Comment2: Swift.String
  public static let screenshotsLivefeedMessage5: Swift.String
  public static let screenshotsLivefeedWebsite1: Swift.String
  public static let screenshotsLivefeedWebsite2: Swift.String
  public static let secondShort: Swift.String
  public static let seeAllMissions: Swift.String
  public static func selectedExpertiseCount(_ p1: Swift.Int) -> Swift.String
  public static let settingsActivateCannedAnswersDesc: Swift.String
  public static let settingsAllRewards: Swift.String
  public static let settingsAppRating: Swift.String
  public static let settingsBadges: Swift.String
  public static func settingsBadgesCount(_ p1: Swift.Int) -> Swift.String
  public static let settingsBadgesError: Swift.String
  public static let settingsBadgesSeeAll: Swift.String
  public static let settingsBetaTester: Swift.String
  public static let settingsBetaTesterBody: Swift.String
  public static let settingsBetaTesterSubject: Swift.String
  public static let settingsFeatureSuggestion: Swift.String
  public static let settingsFeatureSuggestionMailSubject: Swift.String
  public static let settingsHelpCenter: Swift.String
  public static let settingsLegalInformation: Swift.String
  public static let settingsManageCannedAnswers: Swift.String
  public static let settingsNightModeTitle: Swift.String
  public static let settingsRewards: Swift.String
  public static let settingsRewardsError: Swift.String
  public static let settingsSendCrashReport: Swift.String
  public static let settingsSupportTitle: Swift.String
  public static let signInButton: Swift.String
  public static let signUpAccountAlreadyExists: Swift.String
  public static let signUpAccountAlreadyExistsTitle: Swift.String
  public static let signUpAsAnExpertButton: Swift.String
  public static let signUpButton: Swift.String
  public static let signUpInvalidCredentials: Swift.String
  public static func signUpStep(_ p1: Swift.Int, _ p2: Swift.Int) -> Swift.String
  public static let signUpTitle: Swift.String
  public static let snoozeCustomDateTitle: Swift.String
  public static let snoozeHeaderContent: Swift.String
  public static let snoozeKeepConversationSwitchTitle: Swift.String
  public static let snoozeNonValidTimeMessage: Swift.String
  public static let snoozeSuccessMessage: Swift.String
  public static let snoozeTitle: Swift.String
  public static let spokenLanguages: Swift.String
  public static let spokenLanguagesHeader: Swift.String
  public static let statistics: Swift.String
  public static let statsCarouselChats: Swift.String
  public static let statsCarouselIncome: Swift.String
  public static let statsCarouselSatisfaction: Swift.String
  public static let statsCarouselTransaction: Swift.String
  public static func statsChartChat(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static let statsChartMonthTitle: Swift.String
  public static func statsChartTransaction(_ p1: Swift.Int, _ p2: Swift.Int, _ p3: Swift.Int) -> Swift.String
  public static let statsChartWeekTitle: Swift.String
  public static let statsEmptyText: Swift.String
  public static func termsOfServiceMessage(_ p1: Any, _ p2: Any) -> Swift.String
  public static let transferButtonAvailable: Swift.String
  public static let transferButtonNotAvailable: Swift.String
  public static let transferEmptySubtitle: Swift.String
  public static let transferEmptyTitle: Swift.String
  public static let transferHeaderMessage: Swift.String
  public static let transferItemStatusAvailable: Swift.String
  public static let transferItemStatusUnavailable: Swift.String
  public static let transferNotAvailableExplanation: Swift.String
  public static func transferNotAvailableExplanationLegacy(_ p1: Any) -> Swift.String
  public static let transferReasonHint: Swift.String
  public static let transferRoleBot: Swift.String
  public static let transferRoleExpert: Swift.String
  public static let transferRoleProfessional: Swift.String
  public static let transferSearchHint: Swift.String
  public static let transferSuccessMessage: Swift.String
  public static let transferTitle: Swift.String
  public static func translationActionSheetTitle(_ p1: Any) -> Swift.String
  public static let translationActionSheetTranslationSettings: Swift.String
  public static let translationSettingsAutomaticTranslationExplanationText: Swift.String
  public static let translationSettingsAutomaticTranslationSwitchTitle: Swift.String
  public static let translationSettingsAutomaticTranslationTitle: Swift.String
  public static let translationSettingsLanguagesExplanationText: Swift.String
  public static let translationSettingsLanguagesTitle: Swift.String
  public static let translationSettingsMyLanguageTitle: Swift.String
  public static let translationSettingsTitle: Swift.String
  public static let translationSettingsVisitorLanguageTitle: Swift.String
  public static let translationTranslateButtonAccessibilityLabel: Swift.String
  public static func updateNeededPopupMessage(_ p1: Any) -> Swift.String
  public static let updateNeededPopupTitle: Swift.String
  public static let updatePopupButtonLater: Swift.String
  public static let updatePopupButtonUpdate: Swift.String
  public static let updatePopupMessage: Swift.String
  public static let updatePopupTitle: Swift.String
  public static let uploadPopupCamera: Swift.String
  public static let uploadPopupFiles: Swift.String
  public static let uploadPopupGallery: Swift.String
  public static let uploadPopupTitle: Swift.String
  public static let videoAvailability: Swift.String
  public static let videoCallHangUp: Swift.String
  public static let videoCallRefuseExplanation: Swift.String
  public static let videoInvitationAccept: Swift.String
  public static let videoInvitationDecline: Swift.String
  public static let videoInvitationJoinVideoCall: Swift.String
  public static let videoInvitationNewCall: Swift.String
  public static let videoInvitationPermissionExplanation: Swift.String
  public static let videoInvitationPermissionLink: Swift.String
  public static let videoInvitationPursueCall: Swift.String
  public static let videoNotificationNewCall: Swift.String
  public static let videoVisitorCameraDisabled: Swift.String
  public static let videoVisitorEndCall: Swift.String
  public static let walkthroughSubtitle1: Swift.String
  public static let walkthroughSubtitle2: Swift.String
  public static let walkthroughSubtitle3: Swift.String
  public static let walkthroughTitle1: Swift.String
  public static let walkthroughTitle2: Swift.String
  public static let walkthroughTitle3: Swift.String
}
public enum LoadPreviousConversationButtonState {
  case hidden
  case idle
  case loading
  public static func == (a: ConversationUI.LoadPreviousConversationButtonState, b: ConversationUI.LoadPreviousConversationButtonState) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc open class ConversationViewController : UIKit.UIViewController {
  final public let messagesTableView: ConversationUI.MessagesTableView
  public var loadPreviousConversationButtonState: ConversationUI.LoadPreviousConversationButtonState {
    get
    set
  }
  final public let inputBar: ConversationUI.InputBar
  public var baseFont: UIKit.UIFont {
    get
    set
  }
  public var mainColor: UIKit.UIColor {
    get
    set
  }
  public var incomingMessageComposingState: ConversationUI.IncomingMessageComposingState {
    get
    set
  }
  @objc dynamic public init()
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc override dynamic open func viewDidLoad()
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc deinit
}
extension ConversationViewController : UIKit.UITableViewDataSource {
  @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
}
extension ConversationViewController : UIKit.UITableViewDelegate {
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, viewForHeaderInSection section: Swift.Int) -> UIKit.UIView?
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForHeaderInSection section: Swift.Int) -> CoreGraphics.CGFloat
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, viewForFooterInSection section: Swift.Int) -> UIKit.UIView?
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, heightForFooterInSection section: Swift.Int) -> CoreGraphics.CGFloat
  @objc dynamic public func tableView(_ tableView: UIKit.UITableView, estimatedHeightForRowAt indexPath: Foundation.IndexPath) -> CoreGraphics.CGFloat
}
public enum MessageKind {
  case text(Swift.String)
  case image(ConversationUI.Image)
  case file(ConversationUI.File)
  case quickReplyMenu(ConversationUI.QuickReplyMenu)
  case conversationSnoozed(ConversationUI.ConversationSnoozed)
  case transfer(ConversationUI.Transfer)
  case card(ConversationUI.Card)
  case productOffer(ConversationUI.ProductOffer)
  case cardBundle(ConversationUI.CardBundle)
  case productOfferBundle(ConversationUI.ProductOfferBundle)
  case system(Swift.String)
}
public protocol Image {
  var imageURL: Foundation.URL { get }
  var mimeType: Swift.String { get }
  var imageName: Swift.String? { get }
}
public protocol QuickReplyMenu {
  var message: Swift.String { get }
  var choices: [Swift.String] { get }
}
public protocol File {
  var fileName: Swift.String { get }
  var mimeType: Swift.String { get }
  var fileURL: Foundation.URL { get }
}
public protocol ConversationSnoozed {
  var participantName: Swift.String { get }
}
public protocol Transfer {
  var participantName: Swift.String { get }
  var reason: Swift.String? { get }
}
public protocol Card {
  var imageLink: ConversationUI.ImageLink? { get }
  var title: Swift.String? { get }
  var text: Swift.String? { get }
  var cardActions: [ConversationUI.CardAction] { get }
}
public protocol ImageLink {
  var cardImageURL: Foundation.URL { get }
  var cardImageDescription: Swift.String { get }
}
public protocol CardAction {
  var type: ConversationUI.CardActionType { get }
  var cardActionURL: Foundation.URL { get }
  var title: Swift.String { get }
}
public enum CardActionType {
  case link
  public static func == (a: ConversationUI.CardActionType, b: ConversationUI.CardActionType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public protocol ProductOffer {
  var imageLink: ConversationUI.ImageLink? { get }
  var name: Swift.String { get }
  var price: Swift.String { get }
  var offerPrice: Swift.String? { get }
  var productIsAvailable: Swift.Bool? { get }
  var description: Swift.String? { get }
  var productOfferActions: [ConversationUI.CardAction] { get }
}
public protocol CardBundle {
  var cardBundleCards: [ConversationUI.Card] { get }
}
public protocol ProductOfferBundle {
  var bundleProductOffers: [ConversationUI.ProductOffer] { get }
}
public protocol MessagesDelegate : AnyObject {
  func didTapOnContent(in message: ConversationUI.Message)
  func didTapOnAvatar(in message: ConversationUI.Message)
  func didTap(on url: Foundation.URL, in message: ConversationUI.Message)
  func didTap(on quickReplyMenuChoice: Swift.String, in message: ConversationUI.Message)
  func didTapOnLoadPreviousMessages()
  func contextMenuElements(for message: ConversationUI.Message) -> [ConversationUI.MenuElement]
}
extension MessagesDelegate {
  public func didTapOnContent(in message: ConversationUI.Message)
  public func didTapOnAvatar(in message: ConversationUI.Message)
  public func didTap(on url: Foundation.URL, in message: ConversationUI.Message)
  public func didTap(on quickReplyMenuChoice: Swift.String, in message: ConversationUI.Message)
  public func didTapOnLoadPreviousMessages()
  public func contextMenuElements(for message: ConversationUI.Message) -> [ConversationUI.MenuElement]
}
public enum IncomingMessageComposingState {
  case inactive
  case composing(Swift.String?)
  case paused(Swift.String?)
}
extension UIColor {
  public static var azure: UIKit.UIColor {
    get
  }
  public static var conversationBackground: UIKit.UIColor {
    get
  }
  public static var conversationLabel: UIKit.UIColor {
    get
  }
  public static var conversationPlaceholderText: UIKit.UIColor {
    get
  }
  public static var conversationSeparator: UIKit.UIColor {
    get
  }
  public static var firebrick: UIKit.UIColor {
    get
  }
  public static var incomingMessageBackground: UIKit.UIColor {
    get
  }
  public static var incomingMessageText: UIKit.UIColor {
    get
  }
  public static var malachite: UIKit.UIColor {
    get
  }
  public static var outgoingMessageText: UIKit.UIColor {
    get
  }
  public static var secondaryConversationBackground: UIKit.UIColor {
    get
  }
  public static var secondaryConversationLabel: UIKit.UIColor {
    get
  }
}
extension ConversationUI.SenderAlignment : Swift.Equatable {}
extension ConversationUI.SenderAlignment : Swift.Hashable {}
extension ConversationUI.MessageState : Swift.Equatable {}
extension ConversationUI.MessageState : Swift.Hashable {}
extension ConversationUI.MessageState : Swift.RawRepresentable {}
extension ConversationUI.LoadPreviousConversationButtonState : Swift.Equatable {}
extension ConversationUI.LoadPreviousConversationButtonState : Swift.Hashable {}
extension ConversationUI.CardActionType : Swift.Equatable {}
extension ConversationUI.CardActionType : Swift.Hashable {}
